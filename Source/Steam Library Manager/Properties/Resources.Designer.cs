//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Steam_Library_Manager.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Steam_Library_Manager.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Compact Size Detection.
        /// </summary>
        internal static string AdvancedCompactSizeDetection {
            get {
                return ResourceManager.GetString("AdvancedCompactSizeDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the correct size in disk by running compact command on folders..
        /// </summary>
        internal static string AdvancedCompactSizeDetection_Tooltip {
            get {
                return ResourceManager.GetString("AdvancedCompactSizeDetection_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Huge performance impact!.
        /// </summary>
        internal static string AdvancedCompactSizeDetection_Tooltip2 {
            get {
                return ResourceManager.GetString("AdvancedCompactSizeDetection_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error happened while moving game files. Time Elapsed: {ElapsedTime}.
        /// </summary>
        internal static string AnyError_ElapsedTime {
            get {
                return ResourceManager.GetString("AnyError_ElapsedTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error happened while moving game files.
        ///
        ///{ExceptionMessage}
        ///
        ///Would you like to remove files that already moved from target library?.
        /// </summary>
        internal static string AnyException_RemoveFiles {
            get {
                return ResourceManager.GetString("AnyException_RemoveFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing context menu, most likely happened duo typo on color name.
        ///
        ///{ExceptionMessage}.
        /// </summary>
        internal static string AppInfoFormatException {
            get {
                return ResourceManager.GetString("AppInfoFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-clicking to an item will open it&apos;s location in file explorer..
        /// </summary>
        internal static string AppPanel_Desc1 {
            get {
                return ResourceManager.GetString("AppPanel_Desc1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To copy/move a game to another library, simply drag-drop the item to the targeted library..
        /// </summary>
        internal static string AppPanel_Desc2 {
            get {
                return ResourceManager.GetString("AppPanel_Desc2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple item selection/tasking is allowed..
        /// </summary>
        internal static string AppPanel_Desc3 {
            get {
                return ResourceManager.GetString("AppPanel_Desc3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Install.
        /// </summary>
        internal static string AutoInstall {
            get {
                return ResourceManager.GetString("AutoInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Updater.
        /// </summary>
        internal static string AutoUpdater {
            get {
                return ResourceManager.GetString("AutoUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculation method for archive size.
        /// </summary>
        internal static string CalculationMethodForArchiveSize {
            get {
                return ResourceManager.GetString("CalculationMethodForArchiveSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size Calculation Method for Compressed Archives.
        /// </summary>
        internal static string CalculationMethodForArchiveSize_Tooltip {
            get {
                return ResourceManager.GetString("CalculationMethodForArchiveSize_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Size uses the size of the compressed archive..
        /// </summary>
        internal static string CalculationMethodForArchiveSize_Tooltip2 {
            get {
                return ResourceManager.GetString("CalculationMethodForArchiveSize_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Size in Archive enumarates each file in the archive to get the correct size information (SLOW).
        /// </summary>
        internal static string CalculationMethodForArchiveSize_Tooltip3 {
            get {
                return ResourceManager.GetString("CalculationMethodForArchiveSize_Tooltip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculation method for games.
        /// </summary>
        internal static string CalculationMethodForGames {
            get {
                return ResourceManager.GetString("CalculationMethodForGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size Calculation Method for Games.
        /// </summary>
        internal static string CalculationMethodForGames_Tooltip {
            get {
                return ResourceManager.GetString("CalculationMethodForGames_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACF uses the size information provided by the app manifest file.
        /// </summary>
        internal static string CalculationMethodForGames_Tooltip2 {
            get {
                return ResourceManager.GetString("CalculationMethodForGames_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration, enumarates every file and folder to get the correct size information (SLOW).
        /// </summary>
        internal static string CalculationMethodForGames_Tooltip3 {
            get {
                return ResourceManager.GetString("CalculationMethodForGames_Tooltip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t Unload {targetLibraryType} Libraries while there is an active task..
        /// </summary>
        internal static string CantUnloadLibraryWithActiveTask {
            get {
                return ResourceManager.GetString("CantUnloadLibraryWithActiveTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Backup Updates.
        /// </summary>
        internal static string CheckForBackupUpdates {
            get {
                return ResourceManager.GetString("CheckForBackupUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will compare the games in SLM libraries with Steam libraries to find if there is any update available..
        /// </summary>
        internal static string CheckForBackupUpdates_Tooltip {
            get {
                return ResourceManager.GetString("CheckForBackupUpdates_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Updates.
        /// </summary>
        internal static string CheckForUpdates {
            get {
                return ResourceManager.GetString("CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will attempt to check for updates to see if there is newer version available..
        /// </summary>
        internal static string CheckForUpdates_Tooltip {
            get {
                return ResourceManager.GetString("CheckForUpdates_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Updates at Startup.
        /// </summary>
        internal static string CheckForUpdatesAtStartup {
            get {
                return ResourceManager.GetString("CheckForUpdatesAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempts for a new version control at startup..
        /// </summary>
        internal static string CheckForUpdatesAtStartup_Tooltip {
            get {
                return ResourceManager.GetString("CheckForUpdatesAtStartup_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Completed Tasks.
        /// </summary>
        internal static string ClearCompletedTasks {
            get {
                return ResourceManager.GetString("ClearCompletedTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will remove the completed tasks from the task list..
        /// </summary>
        internal static string ClearCompletedTasks_Tooltip {
            get {
                return ResourceManager.GetString("ClearCompletedTasks_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear header image cache.
        /// </summary>
        internal static string ClearHeaderImageCache {
            get {
                return ResourceManager.GetString("ClearHeaderImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will attempt to clear the cache for game header images cached in /.slmcache/ folder.
        /// </summary>
        internal static string ClearHeaderImageCache_Tooltip {
            get {
                return ResourceManager.GetString("ClearHeaderImageCache_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Library.
        /// </summary>
        internal static string CloseLibrary_Tooltip {
            get {
                return ResourceManager.GetString("CloseLibrary_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the selected library from SLM without touching files inside..
        /// </summary>
        internal static string CloseLibrary_Tooltip2 {
            get {
                return ResourceManager.GetString("CloseLibrary_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only available for (non-main) Origin and SLM libraries..
        /// </summary>
        internal static string CloseLibrary_Tooltip3 {
            get {
                return ResourceManager.GetString("CloseLibrary_Tooltip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compact.
        /// </summary>
        internal static string Compact {
            get {
                return ResourceManager.GetString("Compact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressing file: {fileName}.
        /// </summary>
        internal static string Compact_CompressingFile {
            get {
                return ResourceManager.GetString("Compact_CompressingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] Compact task completed in {TimeElapsed}.
        /// </summary>
        internal static string Compact_TaskCompletedIn {
            get {
                return ResourceManager.GetString("Compact_TaskCompletedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory doesn&apos;t exists !? - {DirectoryFullName}.
        /// </summary>
        internal static string CompactDirectoryNotExists {
            get {
                return ResourceManager.GetString("CompactDirectoryNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compacted.
        /// </summary>
        internal static string Compacted {
            get {
                return ResourceManager.GetString("Compacted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Compress.
        /// </summary>
        internal static string CompactForceCompress {
            get {
                return ResourceManager.GetString("CompactForceCompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compact Status Detection.
        /// </summary>
        internal static string CompactStatusDetection {
            get {
                return ResourceManager.GetString("CompactStatusDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the compact status for installed games..
        /// </summary>
        internal static string CompactStatusDetection_Tooltip {
            get {
                return ResourceManager.GetString("CompactStatusDetection_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress.
        /// </summary>
        internal static string Compress {
            get {
                return ResourceManager.GetString("Compress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error related to file system is happened while compressing files.
        ///
        ///Error: {ExceptionMessage}.
        ///
        ///Would you like to remove archive file that is generated by SLM?.
        /// </summary>
        internal static string CompressArchive_FileNotFoundEx {
            get {
                return ResourceManager.GetString("CompressArchive_FileNotFoundEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {ArchiveFullPath} is in use. Delaying the task until archive gets free..
        /// </summary>
        internal static string CompressedArchiveExistsAndInUse {
            get {
                return ResourceManager.GetString("CompressedArchiveExistsAndInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress Files.
        /// </summary>
        internal static string CompressFiles {
            get {
                return ResourceManager.GetString("CompressFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If selected, SLM will compress files. This option can be changed per-task..
        /// </summary>
        internal static string CompressFiles_Tooltip {
            get {
                return ResourceManager.GetString("CompressFiles_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression Level.
        /// </summary>
        internal static string CompressionLevel {
            get {
                return ResourceManager.GetString("CompressionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression Level to use for compressing game files..
        /// </summary>
        internal static string CompressionLevel_Tooltip {
            get {
                return ResourceManager.GetString("CompressionLevel_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy.
        /// </summary>
        internal static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrupted Data File.
        /// </summary>
        internal static string CorruptedDataFile {
            get {
                return ResourceManager.GetString("CorruptedDataFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library already exists at {LibraryPath}.
        /// </summary>
        internal static string CreateLibrary_ExistsMessage {
            get {
                return ResourceManager.GetString("CreateLibrary_ExistsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Libraries can not be created at root.
        /// </summary>
        internal static string CreateLibrary_RootErrorMessage {
            get {
                return ResourceManager.GetString("CreateLibrary_RootErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Library.
        /// </summary>
        internal static string CreateLibrary_Tooltip {
            get {
                return ResourceManager.GetString("CreateLibrary_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a Steam, Origin or SLM library at selected folder..
        /// </summary>
        internal static string CreateLibrary_Tooltip2 {
            get {
                return ResourceManager.GetString("CreateLibrary_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory is not selected for library creation..
        /// </summary>
        internal static string CreateLibraryButton_Click_DirectoryIsNotSelectedForLibraryCreation {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_DirectoryIsNotSelectedForLibraryCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library type is not selected for library creation..
        /// </summary>
        internal static string CreateLibraryButton_Click_LibraryTypeIsNotSelectedForLibraryCreation {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_LibraryTypeIsNotSelectedForLibraryCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin Library support must be enabled for this action..
        /// </summary>
        internal static string CreateLibraryButton_Click_OriginLibrarySupportMustBeEnabledForThisAction {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_OriginLibrarySupportMustBeEnabledForThisAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected directory does not exists: {libraryPath}.
        /// </summary>
        internal static string CreateLibraryButton_Click_SelectedDirectoryDoesNotExistsLibraryPath {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_SelectedDirectoryDoesNotExistsLibraryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library support must be enabled for this action..
        /// </summary>
        internal static string CreateLibraryButton_Click_SteamLibrarySupportMustBeEnabledForThisAction {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_SteamLibrarySupportMustBeEnabledForThisAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uplay Library support must be enabled for this action..
        /// </summary>
        internal static string CreateLibraryButton_Click_UplayLibrarySupportMustBeEnabledForThisAction {
            get {
                return ResourceManager.GetString("CreateLibraryButton_Click_UplayLibrarySupportMustBeEnabledForThisAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Steam library created.
        /// </summary>
        internal static string CreateSteamLibrary_Created {
            get {
                return ResourceManager.GetString("CreateSteamLibrary_Created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to copy Steam.dll.
        /// </summary>
        internal static string CreateSteamLibrary_UnauthorizedAccessException {
            get {
                return ResourceManager.GetString("CreateSteamLibrary_UnauthorizedAccessException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error related to file system is happened while creating a new library at: {NewLibraryPath}
        ///
        ///Error: {ExceptionMessage}.
        ///
        ///The error is related to file system permissions. Try running SLM as administrator or take the target folder permissions for your user..
        /// </summary>
        internal static string CreateSteamLibrary_UnauthorizedAccessExceptionMessage {
            get {
                return ResourceManager.GetString("CreateSteamLibrary_UnauthorizedAccessExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy Steam.dll into new library directory. Permission error, maybe?.
        /// </summary>
        internal static string CreateSteamLibrary_UnknownError {
            get {
                return ResourceManager.GetString("CreateSteamLibrary_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Compact Level.
        /// </summary>
        internal static string DefaultCompactLevel {
            get {
                return ResourceManager.GetString("DefaultCompactLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default compression level for compact tasks..
        /// </summary>
        internal static string DefaultCompactLevel_Tooltip {
            get {
                return ResourceManager.GetString("DefaultCompactLevel_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPRESS4K = Fastest but weakest.
        /// </summary>
        internal static string DefaultCompactLevel_Tooltip2 {
            get {
                return ResourceManager.GetString("DefaultCompactLevel_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPRESS8K = Balanced.
        /// </summary>
        internal static string DefaultCompactLevel_Tooltip3 {
            get {
                return ResourceManager.GetString("DefaultCompactLevel_Tooltip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPRESS16K = Slower but more efficient.
        /// </summary>
        internal static string DefaultCompactLevel_Tooltip4 {
            get {
                return ResourceManager.GetString("DefaultCompactLevel_Tooltip4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LZX = Slowest, most efficient with high overhead.
        /// </summary>
        internal static string DefaultCompactLevel_Tooltip5 {
            get {
                return ResourceManager.GetString("DefaultCompactLevel_Tooltip5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All.
        /// </summary>
        internal static string DeleteAll {
            get {
                return ResourceManager.GetString("DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All Items.
        /// </summary>
        internal static string DeleteAll_Tooltip {
            get {
                return ResourceManager.GetString("DeleteAll_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every item/folder listed here will be DELETED. Use it with caution!.
        /// </summary>
        internal static string DeleteAll_Tooltip2 {
            get {
                return ResourceManager.GetString("DeleteAll_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete files (using SLM).
        /// </summary>
        internal static string DeleteFilesUsingSlm {
            get {
                return ResourceManager.GetString("DeleteFilesUsingSlm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete files (using TaskManager).
        /// </summary>
        internal static string DeleteFilesUsingTaskmanager {
            get {
                return ResourceManager.GetString("DeleteFilesUsingTaskmanager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete library without moving games.
        /// </summary>
        internal static string DeleteLibraryWithoutMovingGames {
            get {
                return ResourceManager.GetString("DeleteLibraryWithoutMovingGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string DeleteMainSteamLibrary {
            get {
                return ResourceManager.GetString("DeleteMainSteamLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t remove the main library of Steam, can you? Never tested tbh. TODO: TEST!.
        /// </summary>
        internal static string DeleteMainSteamLibraryMessage {
            get {
                return ResourceManager.GetString("DeleteMainSteamLibraryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string DeleteSteamLibrary {
            get {
                return ResourceManager.GetString("DeleteSteamLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All game files in library successfully removed as requested.
        ///
        ///Library: {LibraryFullPath}.
        /// </summary>
        internal static string DeleteSteamLibraryMessage {
            get {
                return ResourceManager.GetString("DeleteSteamLibraryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectoryNotFoundException.
        /// </summary>
        internal static string DirectoryNotFoundException {
            get {
                return ResourceManager.GetString("DirectoryNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{FolderfullPath}] Folder couldn&apos;t be created/not found. Running SLM as Administrator might help.
        ///
        ///Error: {ExceptionMessage}.
        /// </summary>
        internal static string DirectoryNotFoundExceptionMessage {
            get {
                return ResourceManager.GetString("DirectoryNotFoundExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string Disabled {
            get {
                return ResourceManager.GetString("Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate.
        /// </summary>
        internal static string Donate {
            get {
                return ResourceManager.GetString("Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Items.
        /// </summary>
        internal static string DuplicateItems {
            get {
                return ResourceManager.GetString("DuplicateItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        internal static string Enums_AppID {
            get {
                return ResourceManager.GetString("Enums_AppID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File size in archive.
        /// </summary>
        internal static string Enums_ArchiveFileSize {
            get {
                return ResourceManager.GetString("Enums_ArchiveFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive size.
        /// </summary>
        internal static string Enums_ArchiveSize {
            get {
                return ResourceManager.GetString("Enums_ArchiveSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup type.
        /// </summary>
        internal static string Enums_BackupType {
            get {
                return ResourceManager.GetString("Enums_BackupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compact.
        /// </summary>
        internal static string Enums_Compact {
            get {
                return ResourceManager.GetString("Enums_Compact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy.
        /// </summary>
        internal static string Enums_Copy {
            get {
                return ResourceManager.GetString("Enums_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Theme.
        /// </summary>
        internal static string Enums_Custom {
            get {
                return ResourceManager.GetString("Enums_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Theme.
        /// </summary>
        internal static string Enums_Dark {
            get {
                return ResourceManager.GetString("Enums_Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string Enums_Delete {
            get {
                return ResourceManager.GetString("Enums_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fastest.
        /// </summary>
        internal static string Enums_Fastest {
            get {
                return ResourceManager.GetString("Enums_Fastest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grid View.
        /// </summary>
        internal static string Enums_GridView {
            get {
                return ResourceManager.GetString("Enums_GridView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last play.
        /// </summary>
        internal static string Enums_LastPlayed {
            get {
                return ResourceManager.GetString("Enums_LastPlayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last update.
        /// </summary>
        internal static string Enums_LastUpdate {
            get {
                return ResourceManager.GetString("Enums_LastUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Theme.
        /// </summary>
        internal static string Enums_Light {
            get {
                return ResourceManager.GetString("Enums_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List View.
        /// </summary>
        internal static string Enums_ListView {
            get {
                return ResourceManager.GetString("Enums_ListView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string Enums_Name {
            get {
                return ResourceManager.GetString("Enums_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimal.
        /// </summary>
        internal static string Enums_Optimal {
            get {
                return ResourceManager.GetString("Enums_Optimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size on disk.
        /// </summary>
        internal static string Enums_SizeOnDisk {
            get {
                return ResourceManager.GetString("Enums_SizeOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store.
        /// </summary>
        internal static string Enums_Store {
            get {
                return ResourceManager.GetString("Enums_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] File compressed: {FileNameInArchive}.
        /// </summary>
        internal static string FileCompressed {
            get {
                return ResourceManager.GetString("FileCompressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] File decompressed: {NewFileFullPath}.
        /// </summary>
        internal static string FileDecompressed {
            get {
                return ResourceManager.GetString("FileDecompressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] File list populated, total files to move: {FileCount} - total size to move: {TotalFileSize}.
        /// </summary>
        internal static string FileListPopulated {
            get {
                return ResourceManager.GetString("FileListPopulated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] File copied: {NewFileName}.
        /// </summary>
        internal static string FileMoved {
            get {
                return ResourceManager.GetString("FileMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error related to file permissions happened during file movement. Running SLM as Administrator might help.
        ///
        ///Error: {ExceptionMessage}.
        ///
        ///Would you like to remove files that already moved from target library?.
        /// </summary>
        internal static string FilePermissionRelatedError_DeleteFiles {
            get {
                return ResourceManager.GetString("FilePermissionRelatedError_DeleteFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error related to file system is happened while moving files. Error: {ExceptionMessage}.
        /// </summary>
        internal static string FileSystemRelatedError {
            get {
                return ResourceManager.GetString("FileSystemRelatedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] An error related to file system is happened while moving files.
        ///
        ///Error: {ExceptionMessage}
        ///
        ///Would you like to remove files that already moved from target library?.
        /// </summary>
        internal static string FileSystemRelatedError_DeleteMovedFiles {
            get {
                return ResourceManager.GetString("FileSystemRelatedError_DeleteMovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Transfer Method.
        /// </summary>
        internal static string FileTransferMethod {
            get {
                return ResourceManager.GetString("FileTransferMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] FontAwesome {
            get {
                object obj = ResourceManager.GetObject("FontAwesome", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing context menu, most likely happened duo typo on color name.
        ///
        ///{ExceptionMessage}.
        /// </summary>
        internal static string FormatException {
            get {
                return ResourceManager.GetString("FormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Forms_Cancel {
            get {
                return ResourceManager.GetString("Forms_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed.
        /// </summary>
        internal static string Forms_Compressed {
            get {
                return ResourceManager.GetString("Forms_Compressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing junk files as you have requested..
        /// </summary>
        internal static string Forms_LibraryCleaner_Delete {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempts to delete every folder/file in the given list..
        /// </summary>
        internal static string Forms_LibraryCleaner_DeleteAll_Tooltip2 {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_DeleteAll_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete selected Folder(s).
        /// </summary>
        internal static string Forms_LibraryCleaner_DeleteSelectedFolders {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_DeleteSelectedFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There might be saved games in these folders?!.
        /// </summary>
        internal static string Forms_LibraryCleaner_DeleteWarning {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_DeleteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved Games may be located within these folders, are you sure you want to remove them?.
        /// </summary>
        internal static string Forms_LibraryCleaner_DeleteWarningMessage {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_DeleteWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing old directory:
        ///
        ///{DirectoryFullPath}.
        /// </summary>
        internal static string Forms_LibraryCleaner_DeletingDirectory {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_DeletingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move All.
        /// </summary>
        internal static string Forms_LibraryCleaner_MoveAll {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_MoveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move All Items.
        /// </summary>
        internal static string Forms_LibraryCleaner_MoveAll_Tooltip {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_MoveAll_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moves every folder/file in the given list to selected path..
        /// </summary>
        internal static string Forms_LibraryCleaner_MoveAll_Tooltip2 {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_MoveAll_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving file:
        ///
        ///{FileFullName}.
        /// </summary>
        internal static string Forms_LibraryCleaner_MovingFile {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_MovingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving junk files as you have requested..
        /// </summary>
        internal static string Forms_LibraryCleaner_MovingFiles {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_MovingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Explorer.
        /// </summary>
        internal static string Forms_LibraryCleaner_Open {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh List.
        /// </summary>
        internal static string Forms_LibraryCleaner_RefreshList {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_RefreshList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Items.
        /// </summary>
        internal static string Forms_LibraryCleaner_RefreshList_Tooltip {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_RefreshList_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refreshes the junk list for Steam libraries..
        /// </summary>
        internal static string Forms_LibraryCleaner_RefreshList_Tooltip2 {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_RefreshList_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root path selected?.
        /// </summary>
        internal static string Forms_LibraryCleaner_RootPathSelected {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_RootPathSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you like to move junks to root of disk?.
        /// </summary>
        internal static string Forms_LibraryCleaner_RootPathSelectedMessage {
            get {
                return ResourceManager.GetString("Forms_LibraryCleaner_RootPathSelectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offline.
        /// </summary>
        internal static string Forms_LibraryView_Offline {
            get {
                return ResourceManager.GetString("Forms_LibraryView_Offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord.
        /// </summary>
        internal static string Forms_Main_Discord {
            get {
                return ResourceManager.GetString("Forms_Main_Discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens a webpage with available donation methods. Thank you for your support!.
        /// </summary>
        internal static string Forms_Main_DonateDescription {
            get {
                return ResourceManager.GetString("Forms_Main_DonateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search in selected library.
        /// </summary>
        internal static string Forms_Main_SearchInLibrary {
            get {
                return ResourceManager.GetString("Forms_Main_SearchInLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library.
        /// </summary>
        internal static string Forms_Main_TabHeader_Library {
            get {
                return ResourceManager.GetString("Forms_Main_TabHeader_Library", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library Cleaner.
        /// </summary>
        internal static string Forms_Main_TabHeader_LibraryCleaner {
            get {
                return ResourceManager.GetString("Forms_Main_TabHeader_LibraryCleaner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Manager.
        /// </summary>
        internal static string Forms_Main_TabHeader_TaskManager {
            get {
                return ResourceManager.GetString("Forms_Main_TabHeader_TaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translate.
        /// </summary>
        internal static string Forms_Main_Translate {
            get {
                return ResourceManager.GetString("Forms_Main_Translate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit.
        /// </summary>
        internal static string Forms_Quit {
            get {
                return ResourceManager.GetString("Forms_Quit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit application?.
        /// </summary>
        internal static string Forms_QuitSLM {
            get {
                return ResourceManager.GetString("Forms_QuitSLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are active tasked jobs available in Task Manager. Are you sure you want to quit SLM? This might result in a data loss..
        /// </summary>
        internal static string Forms_QuitSLMMessage {
            get {
                return ResourceManager.GetString("Forms_QuitSLMMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress.
        /// </summary>
        internal static string Forms_Settings_Compress {
            get {
                return ResourceManager.GetString("Forms_Settings_Compress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT Compress.
        /// </summary>
        internal static string Forms_Settings_DoNOTCompress {
            get {
                return ResourceManager.GetString("Forms_Settings_DoNOTCompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT Remove.
        /// </summary>
        internal static string Forms_Settings_DoNOTRemove {
            get {
                return ResourceManager.GetString("Forms_Settings_DoNOTRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game listing method.
        /// </summary>
        internal static string Forms_Settings_GameListMethod {
            get {
                return ResourceManager.GetString("Forms_Settings_GameListMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string Forms_Settings_HeaderImageCache {
            get {
                return ResourceManager.GetString("Forms_Settings_HeaderImageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header Image Cache cleared..
        /// </summary>
        internal static string Forms_Settings_HeaderImageCacheMessage {
            get {
                return ResourceManager.GetString("Forms_Settings_HeaderImageCacheMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        internal static string Forms_Settings_Remove {
            get {
                return ResourceManager.GetString("Forms_Settings_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM.
        /// </summary>
        internal static string Forms_SLM {
            get {
                return ResourceManager.GetString("Forms_SLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.
        /// </summary>
        internal static string Forms_Steam {
            get {
                return ResourceManager.GetString("Forms_Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report File Movement.
        /// </summary>
        internal static string Forms_TaskManager_ReportFileMovement {
            get {
                return ResourceManager.GetString("Forms_TaskManager_ReportFileMovement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General Settings.
        /// </summary>
        internal static string GeneralSettings {
            get {
                return ResourceManager.GetString("GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Available.
        /// </summary>
        internal static string HamburgerMenuControl_AllAvailable {
            get {
                return ResourceManager.GetString("HamburgerMenuControl_AllAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headless Data File.
        /// </summary>
        internal static string HeadlessDataFile {
            get {
                return ResourceManager.GetString("HeadlessDataFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headless Folder.
        /// </summary>
        internal static string HeadlessFolder {
            get {
                return ResourceManager.GetString("HeadlessFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headless Workshop Folder.
        /// </summary>
        internal static string HeadlessWorkshopFolder {
            get {
                return ResourceManager.GetString("HeadlessWorkshopFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home.
        /// </summary>
        internal static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignored.
        /// </summary>
        internal static string Ignored {
            get {
                return ResourceManager.GetString("Ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignored Items.
        /// </summary>
        internal static string IgnoredItems {
            get {
                return ResourceManager.GetString("IgnoredItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore Selected Item(s).
        /// </summary>
        internal static string IgnoreSelectedItems {
            get {
                return ResourceManager.GetString("IgnoreSelectedItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation is completed!.
        /// </summary>
        internal static string InstallationWizard_Completed {
            get {
                return ResourceManager.GetString("InstallationWizard_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Junk Items.
        /// </summary>
        internal static string JunkItems {
            get {
                return ResourceManager.GetString("JunkItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep searching on library change.
        /// </summary>
        internal static string KeepSearchingOnLibraryChange {
            get {
                return ResourceManager.GetString("KeepSearchingOnLibraryChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keeps the searching text and search for the text in the new selected library if active..
        /// </summary>
        internal static string KeepSearchingOnLibraryChange_Tooltip {
            get {
                return ResourceManager.GetString("KeepSearchingOnLibraryChange_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Language to use with SLM..
        /// </summary>
        internal static string Language_Tooltip {
            get {
                return ResourceManager.GetString("Language_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-clicking to an item will open it&apos;s location in file explorer..
        /// </summary>
        internal static string LibraryCleanerTooltip {
            get {
                return ResourceManager.GetString("LibraryCleanerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-clicking to an item will open it&apos;s location in file explorer..
        /// </summary>
        internal static string LibraryPanel_Tooltip {
            get {
                return ResourceManager.GetString("LibraryPanel_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library Settings.
        /// </summary>
        internal static string LibrarySettings {
            get {
                return ResourceManager.GetString("LibrarySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library Type.
        /// </summary>
        internal static string LibraryType {
            get {
                return ResourceManager.GetString("LibraryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a library type you would like to create of..
        /// </summary>
        internal static string LibraryTypeDescription {
            get {
                return ResourceManager.GetString("LibraryTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Group.
        /// </summary>
        internal static string Main_DiscordGroup {
            get {
                return ResourceManager.GetString("Main_DiscordGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the invitation link for SLM&apos;s Discord Group on your favorite web browser..
        /// </summary>
        internal static string Main_DiscordGroupDescription {
            get {
                return ResourceManager.GetString("Main_DiscordGroupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Path:.
        /// </summary>
        internal static string Main_SelectedPath {
            get {
                return ResourceManager.GetString("Main_SelectedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {AppName} ({SizeOnDisk}).
        /// </summary>
        internal static string MenuDiskInfo {
            get {
                return ResourceManager.GetString("MenuDiskInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move.
        /// </summary>
        internal static string Move {
            get {
                return ResourceManager.GetString("Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move files sequentially if bigger than.
        /// </summary>
        internal static string MoveFilesSequentiallyIfBiggerThan {
            get {
                return ResourceManager.GetString("MoveFilesSequentiallyIfBiggerThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move files bigger than (X) MB sequentially.
        /// </summary>
        internal static string MoveFilesSequentiallyIfBiggerThan_Tooltip {
            get {
                return ResourceManager.GetString("MoveFilesSequentiallyIfBiggerThan_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM moves files parallelly for the best performance but for bigger files it may downgrade the performance and may be best to move sequentially..
        /// </summary>
        internal static string MoveFilesSequentiallyIfBiggerThan_Tooltip2 {
            get {
                return ResourceManager.GetString("MoveFilesSequentiallyIfBiggerThan_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string MoveGamesConfirmError {
            get {
                return ResourceManager.GetString("MoveGamesConfirmError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function is not implemented, process cancelled.
        /// </summary>
        internal static string MoveGamesConfirmErrorMessage {
            get {
                return ResourceManager.GetString("MoveGamesConfirmErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string MoveGamesInLibrary {
            get {
                return ResourceManager.GetString("MoveGamesInLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move games in Library before deleting the library?.
        /// </summary>
        internal static string MoveGamesInLibraryMessage {
            get {
                return ResourceManager.GetString("MoveGamesInLibraryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap no_image_available {
            get {
                object obj = ResourceManager.GetObject("no_image_available", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Logs Folder.
        /// </summary>
        internal static string OpenLogsFolder {
            get {
                return ResourceManager.GetString("OpenLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will attempt to open /logs/ folder in the file explorer if exists..
        /// </summary>
        internal static string OpenLogsFolder_Tooltip {
            get {
                return ResourceManager.GetString("OpenLogsFolder_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin.
        /// </summary>
        internal static string Origin {
            get {
                return ResourceManager.GetString("Origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin directory does not exists.
        ///
        ///{NotFoundDirectoryFullPath}.
        /// </summary>
        internal static string Origin_DirectoryNotExists {
            get {
                return ResourceManager.GetString("Origin_DirectoryNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin config file doesn&apos;t contains &apos;DownloadInPlaceDir&apos; config
        ///
        ///{OriginConfigFilePath}.
        /// </summary>
        internal static string Origin_MissingKey {
            get {
                return ResourceManager.GetString("Origin_MissingKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repair.
        /// </summary>
        internal static string OriginApp_CMenu_Repair {
            get {
                return ResourceManager.GetString("OriginApp_CMenu_Repair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin App Installation.
        /// </summary>
        internal static string OriginInstallation {
            get {
                return ResourceManager.GetString("OriginInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin game installation completed.
        ///
        ///Installer result message:
        ///{installerResult}.
        /// </summary>
        internal static string OriginInstallation_Completed {
            get {
                return ResourceManager.GetString("OriginInstallation_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asking Origin to install {AppName} as you have requested.
        ///
        ///Waiting for Origin to complete the installation....
        /// </summary>
        internal static string OriginInstallation_Ongoing {
            get {
                return ResourceManager.GetString("OriginInstallation_Ongoing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asking Origin to install {AppName} as you have requested..
        /// </summary>
        internal static string OriginInstallation_Start {
            get {
                return ResourceManager.GetString("OriginInstallation_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open library in explorer ({LibraryFullPath}).
        /// </summary>
        internal static string OriginLibrary_CMenu_Open {
            get {
                return ResourceManager.GetString("OriginLibrary_CMenu_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from SLM.
        /// </summary>
        internal static string OriginLibrary_CMenu_RemoveFromSLM {
            get {
                return ResourceManager.GetString("OriginLibrary_CMenu_RemoveFromSLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin Library Support.
        /// </summary>
        internal static string OriginLibrarySupport {
            get {
                return ResourceManager.GetString("OriginLibrarySupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/Disables Origin Library functionality for SLM.
        /// </summary>
        internal static string OriginLibrarySupport_Tooltip {
            get {
                return ResourceManager.GetString("OriginLibrarySupport_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Manifest Version from Origin game: {OriginApp} - {ManifestVersion}.
        /// </summary>
        internal static string OriginUnknownManifestFile {
            get {
                return ResourceManager.GetString("OriginUnknownManifestFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while updating game list for Origin library: {FullPath}
        ///    {ex}.
        /// </summary>
        internal static string OriginUpdateAppListException {
            get {
                return ResourceManager.GetString("OriginUpdateAppListException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] PathTooLongException happened while copying files. Nothing can be made by SLM in this error.
        ///
        ///Error: {ExceptionMessage}
        ///
        ///Would you like to remove files that already moved from target library?.
        /// </summary>
        internal static string PathTooLongException {
            get {
                return ResourceManager.GetString("PathTooLongException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause Task Manager.
        /// </summary>
        internal static string PauseTaskManager {
            get {
                return ResourceManager.GetString("PauseTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pauses task processing and active tasks..
        /// </summary>
        internal static string PauseTaskManager_Tooltip {
            get {
                return ResourceManager.GetString("PauseTaskManager_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play a sound on completion.
        /// </summary>
        internal static string PlayASoundOnCompletion {
            get {
                return ResourceManager.GetString("PlayASoundOnCompletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play a Sound on Task Manager Queue Completion.
        /// </summary>
        internal static string PlayASoundOnCompletion_Tooltip {
            get {
                return ResourceManager.GetString("PlayASoundOnCompletion_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will attempt to play a sound (Windows exclamation or the file in CustomSoundFile setting key) on the queue of task manager gets completed..
        /// </summary>
        internal static string PlayASoundOnCompletion_Tooltip2 {
            get {
                return ResourceManager.GetString("PlayASoundOnCompletion_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait....
        /// </summary>
        internal static string PleaseWait {
            get {
                return ResourceManager.GetString("PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] Populating file list, please wait.
        /// </summary>
        internal static string PopulatingFileList {
            get {
                return ResourceManager.GetString("PopulatingFileList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t delete the archive file.
        /// </summary>
        internal static string ReadZip_DontDelete {
            get {
                return ResourceManager.GetString("ReadZip_DontDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing zip file.
        /// </summary>
        internal static string ReadZip_InvalidDataException {
            get {
                return ResourceManager.GetString("ReadZip_InvalidDataException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing zip file:
        ///
        ///{ZipPath}
        ///
        ///It is still suggested to check the archive file manually to see if it is really corrupted or not!
        ///
        ///Would you like to remove the given archive file?.
        /// </summary>
        internal static string ReadZip_InvalidDataExceptionMessage {
            get {
                return ResourceManager.GetString("ReadZip_InvalidDataExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing zip file.
        /// </summary>
        internal static string ReadZip_IOException {
            get {
                return ResourceManager.GetString("ReadZip_IOException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while parsing zip file:
        ///
        ///{ZipPath}
        ///
        ///It is still suggested to check the archive file manually to see if it is really corrupted or not!
        ///
        ///Would you like to remove the given archive file?.
        /// </summary>
        internal static string ReadZip_IOExceptionMessage {
            get {
                return ResourceManager.GetString("ReadZip_IOExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Library.
        /// </summary>
        internal static string RefreshLibrary_Tooltip {
            get {
                return ResourceManager.GetString("RefreshLibrary_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refreshes the current status of selected library..
        /// </summary>
        internal static string RefreshLibrary_Tooltip2 {
            get {
                return ResourceManager.GetString("RefreshLibrary_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove files at Source directory.
        /// </summary>
        internal static string RemoveFilesAtSourceDirectory {
            get {
                return ResourceManager.GetString("RemoveFilesAtSourceDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If selected and task is completed successfully (copy-first then remove), SLM will remove the copied files from source. This option can be change per-task..
        /// </summary>
        internal static string RemoveFilesAtSourceDirectory_Tooltip {
            get {
                return ResourceManager.GetString("RemoveFilesAtSourceDirectory_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Ignore List.
        /// </summary>
        internal static string RemoveFromIgnoreList {
            get {
                return ResourceManager.GetString("RemoveFromIgnoreList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Ignore List.
        /// </summary>
        internal static string RemoveFromIgnoreList_Tooltip {
            get {
                return ResourceManager.GetString("RemoveFromIgnoreList_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes listed items from the Ignore List.
        /// </summary>
        internal static string RemoveFromIgnoreList_Tooltip2 {
            get {
                return ResourceManager.GetString("RemoveFromIgnoreList_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from SLM.
        /// </summary>
        internal static string RemoveFromSlm {
            get {
                return ResourceManager.GetString("RemoveFromSlm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove moved files?.
        /// </summary>
        internal static string RemoveMovedFiles {
            get {
                return ResourceManager.GetString("RemoveMovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Selected Item(s) from Ignore List.
        /// </summary>
        internal static string RemoveSelectedItemSFromIgnoreList {
            get {
                return ResourceManager.GetString("RemoveSelectedItemSFromIgnoreList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report File Movement.
        /// </summary>
        internal static string ReportFileMovement {
            get {
                return ResourceManager.GetString("ReportFileMovement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If selected, SLM will report file movement status to log view in the task manager. This option can be changed per-task..
        /// </summary>
        internal static string ReportFileMovement_Tooltip {
            get {
                return ResourceManager.GetString("ReportFileMovement_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run.
        /// </summary>
        internal static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for....
        /// </summary>
        internal static string SearchFor {
            get {
                return ResourceManager.GetString("SearchFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lets you search for a game by it&apos;s name or appid..
        /// </summary>
        internal static string SearchForDesc {
            get {
                return ResourceManager.GetString("SearchForDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string Select {
            get {
                return ResourceManager.GetString("Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Library Type:.
        /// </summary>
        internal static string SelectedLibraryType {
            get {
                return ResourceManager.GetString("SelectedLibraryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort games by.
        /// </summary>
        internal static string SortGamesBy {
            get {
                return ResourceManager.GetString("SortGamesBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting Method for Game Panel.
        /// </summary>
        internal static string SortGamesBy_Tooltip {
            get {
                return ResourceManager.GetString("SortGamesBy_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lets you select a sorting method for the game panel..
        /// </summary>
        internal static string SortGamesBy_Tooltip2 {
            get {
                return ResourceManager.GetString("SortGamesBy_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Task Manager.
        /// </summary>
        internal static string StartTaskManager {
            get {
                return ResourceManager.GetString("StartTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will start the task manager. Task Manager will process the queued items or wait for new items..
        /// </summary>
        internal static string StartTaskManager_Tooltip {
            get {
                return ResourceManager.GetString("StartTaskManager_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Task Manager at Startup.
        /// </summary>
        internal static string StartTaskManagerAtStartup {
            get {
                return ResourceManager.GetString("StartTaskManagerAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Task Manager will be started at startup..
        /// </summary>
        internal static string StartTaskManagerAtStartup_Tooltip {
            get {
                return ResourceManager.GetString("StartTaskManagerAtStartup_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for backup updates as you have requested..
        /// </summary>
        internal static string Steam_CheckForBackupUpdates {
            get {
                return ResourceManager.GetString("Steam_CheckForBackupUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] Check for Backup updates completed..
        /// </summary>
        internal static string Steam_CheckForBackupUpdates_Completed {
            get {
                return ResourceManager.GetString("Steam_CheckForBackupUpdates_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for:
        ///
        ///{CurrentAppName}.
        /// </summary>
        internal static string Steam_CheckForBackupUpdates_Progress {
            get {
                return ResourceManager.GetString("Steam_CheckForBackupUpdates_Progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] An update is available for: {CurrentAppName} - Old backup time: {CurrentAppLastUpdatedOn} - Updated on: {NewAppLastUpdatedOn} - Target: {CurrentAppSteamFullPath} - Source: {NewAppSteamFullPath}.
        /// </summary>
        internal static string Steam_CheckForBackupUpdates_UpdateFound {
            get {
                return ResourceManager.GetString("Steam_CheckForBackupUpdates_UpdateFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam needs to be closed.
        /// </summary>
        internal static string Steam_NeedsToBeClosed {
            get {
                return ResourceManager.GetString("Steam_NeedsToBeClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.exe could not found and user doesn&apos;t wants to terminate the process..
        /// </summary>
        internal static string Steam_NeedsToBeClosed_NotFoundAndUserCancelled {
            get {
                return ResourceManager.GetString("Steam_NeedsToBeClosed_NotFoundAndUserCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User doesn&apos;t wants to close Steam, can not continue to process..
        /// </summary>
        internal static string Steam_NeedsToBeClosed_UserCancelled {
            get {
                return ResourceManager.GetString("Steam_NeedsToBeClosed_UserCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam needs to be closed for this action. Would you like SLM to close Steam?.
        /// </summary>
        internal static string Steam_NeedsToBeClosedMessage {
            get {
                return ResourceManager.GetString("Steam_NeedsToBeClosedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.exe could not found (even it is already working?), SLM can try to terminate the Steam processes now if you want to.
        ///
        ///Active Steam process path: {ActiveSteamPath}.
        /// </summary>
        internal static string Steam_NeedsToBeClosedMessage2 {
            get {
                return ResourceManager.GetString("Steam_NeedsToBeClosedMessage2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam installation couldn&apos;t be found.
        /// </summary>
        internal static string Steam_NotInstalled {
            get {
                return ResourceManager.GetString("Steam_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam couldn&apos;t be found under registry. Would you like to locate Steam manually?.
        /// </summary>
        internal static string Steam_NotInstalledMessage {
            get {
                return ResourceManager.GetString("Steam_NotInstalledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Steam?.
        /// </summary>
        internal static string Steam_Start {
            get {
                return ResourceManager.GetString("Steam_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User doesn&apos;t wants to start Steam..
        /// </summary>
        internal static string Steam_Start_UserCancelled {
            get {
                return ResourceManager.GetString("Steam_Start_UserCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like SLM to Start Steam?.
        /// </summary>
        internal static string Steam_StartMessage {
            get {
                return ResourceManager.GetString("Steam_StartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (De)Compress.
        /// </summary>
        internal static string SteamApp_CMenu_Compress {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_Compress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete files (using SLM).
        /// </summary>
        internal static string SteamApp_CMenu_DeleteFilesSLM {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_DeleteFilesSLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete files (using TaskManager).
        /// </summary>
        internal static string SteamApp_CMenu_DeleteFilesTM {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_DeleteFilesTM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {AppName} ({SizeOnDisk}).
        /// </summary>
        internal static string SteamApp_CMenu_DiskInfo {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_DiskInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Hub.
        /// </summary>
        internal static string SteamApp_CMenu_GameHub {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_GameHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Search.
        /// </summary>
        internal static string SteamApp_CMenu_GoogleSearch {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_GoogleSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play.
        /// </summary>
        internal static string SteamApp_CMenu_Play {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscribed Workshop Items.
        /// </summary>
        internal static string SteamApp_CMenu_SubscribedWorkshopItems {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_SubscribedWorkshopItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify Files.
        /// </summary>
        internal static string SteamApp_CMenu_VerifyFiles {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_VerifyFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View ACF File.
        /// </summary>
        internal static string SteamApp_CMenu_ViewACF {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_ViewACF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Store Page.
        /// </summary>
        internal static string SteamApp_CMenu_ViewStore {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_ViewStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workshop.
        /// </summary>
        internal static string SteamApp_CMenu_Workshop {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_Workshop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View on Youtube.
        /// </summary>
        internal static string SteamApp_CMenu_YoutubeSearch {
            get {
                return ResourceManager.GetString("SteamApp_CMenu_YoutubeSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string SteamApp_RemovingError {
            get {
                return ResourceManager.GetString("SteamApp_RemovingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error happened while removing app files. {FullPath}.
        /// </summary>
        internal static string SteamApp_RemovingErrorMessage {
            get {
                return ResourceManager.GetString("SteamApp_RemovingErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SteamApps Folder Doesn&apos;t Exists at: {SteamAppsFolderFullPath}.
        /// </summary>
        internal static string SteamAppsFolderNotExists {
            get {
                return ResourceManager.GetString("SteamAppsFolderNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete games in library.
        /// </summary>
        internal static string SteamLibrary_CMenu_DeleteGames {
            get {
                return ResourceManager.GetString("SteamLibrary_CMenu_DeleteGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open library in explorer ({LibraryFullPath}).
        /// </summary>
        internal static string SteamLibrary_CMenu_Open {
            get {
                return ResourceManager.GetString("SteamLibrary_CMenu_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove library from Steam (/w files).
        /// </summary>
        internal static string SteamLibrary_CMenu_RemoveFromSteam {
            get {
                return ResourceManager.GetString("SteamLibrary_CMenu_RemoveFromSteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager: Installation Wizard.
        /// </summary>
        internal static string SteamLibraryManagerInstallationWizard {
            get {
                return ResourceManager.GetString("SteamLibraryManagerInstallationWizard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Support.
        /// </summary>
        internal static string SteamLibrarySupport {
            get {
                return ResourceManager.GetString("SteamLibrarySupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/Disables Steam Library functionality for SLM.
        /// </summary>
        internal static string SteamLibrarySupport_Tooltip {
            get {
                return ResourceManager.GetString("SteamLibrarySupport_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam &amp; SLM.
        /// </summary>
        internal static string SteamSLM {
            get {
                return ResourceManager.GetString("SteamSLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam UserID64 to use with SLM.
        /// </summary>
        internal static string SteamUserID64 {
            get {
                return ResourceManager.GetString("SteamUserID64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If selected, SLM will attempt to get latest play date information for games from config file of Steam..
        /// </summary>
        internal static string SteamUserID64_Tooltip {
            get {
                return ResourceManager.GetString("SteamUserID64_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Task Manager.
        /// </summary>
        internal static string StopTaskManager {
            get {
                return ResourceManager.GetString("StopTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the task manager and cancels the active task..
        /// </summary>
        internal static string StopTaskManager_Tooltip {
            get {
                return ResourceManager.GetString("StopTaskManager_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] Operation cancelled by user. Time Elapsed: {ElapsedTime}.
        /// </summary>
        internal static string TaskCancelled_ElapsedTime {
            get {
                return ResourceManager.GetString("TaskCancelled_ElapsedTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] Game movement cancelled. Would you like to remove files that already moved from target library?.
        /// </summary>
        internal static string TaskCancelled_RemoveFiles {
            get {
                return ResourceManager.GetString("TaskCancelled_RemoveFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] Time elapsed: {ElapsedTime} - Average speed: {AverageSpeed} MB/sec - Average file size: {AverageFileSize}.
        /// </summary>
        internal static string TaskCompleted {
            get {
                return ResourceManager.GetString("TaskCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task Manager Default Settings.
        /// </summary>
        internal static string TaskManager {
            get {
                return ResourceManager.GetString("TaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] [TaskManager] Task Manager is now active and waiting for tasks....
        /// </summary>
        internal static string TaskManager_Active {
            get {
                return ResourceManager.GetString("TaskManager_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string TaskManager_AlreadyTasked {
            get {
                return ResourceManager.GetString("TaskManager_AlreadyTasked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item is already tasked.
        ///
        ///Game: {AppName}
        ///Target Library: {LibraryFullPath}.
        /// </summary>
        internal static string TaskManager_AlreadyTaskedMessage {
            get {
                return ResourceManager.GetString("TaskManager_AlreadyTaskedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] [TaskManager] Task Manager is paused as requested..
        /// </summary>
        internal static string TaskManager_Paused {
            get {
                return ResourceManager.GetString("TaskManager_Paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] [{AppName}] Removing copied source files as requested. This may take a while, please wait..
        /// </summary>
        internal static string TaskManager_RemoveOldFiles {
            get {
                return ResourceManager.GetString("TaskManager_RemoveOldFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] [{AppName}] Files removed, task is completed now..
        /// </summary>
        internal static string TaskManager_RemoveOldFilesCompleted {
            get {
                return ResourceManager.GetString("TaskManager_RemoveOldFilesCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{CurrentTime}] [TaskManager] Task Manager is stopped..
        /// </summary>
        internal static string TaskManager_Stopped {
            get {
                return ResourceManager.GetString("TaskManager_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COMPLETED.
        /// </summary>
        internal static string TaskManagerCompleted {
            get {
                return ResourceManager.GetString("TaskManagerCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause.
        /// </summary>
        internal static string TaskManagerPause {
            get {
                return ResourceManager.GetString("TaskManagerPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected Game(s) from Queue.
        /// </summary>
        internal static string TaskManagerRemoveFromQueue {
            get {
                return ResourceManager.GetString("TaskManagerRemoveFromQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        internal static string TaskManagerStart {
            get {
                return ResourceManager.GetString("TaskManagerStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        internal static string TaskManagerStop {
            get {
                return ResourceManager.GetString("TaskManagerStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Clear Completed Tasks.
        /// </summary>
        internal static string TaskManagerView_AutoClearCompletedTasks {
            get {
                return ResourceManager.GetString("TaskManagerView_AutoClearCompletedTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will remove the completed tasks from task manager..
        /// </summary>
        internal static string TaskManagerView_AutoClearCompletedTasks_Tooltip {
            get {
                return ResourceManager.GetString("TaskManagerView_AutoClearCompletedTasks_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Scroll Logs.
        /// </summary>
        internal static string TaskManagerView_AutoScrollLogs {
            get {
                return ResourceManager.GetString("TaskManagerView_AutoScrollLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SLM will auto-scroll the logs in the logs window. It may freeze the ui if a lot of small files moved..
        /// </summary>
        internal static string TaskManagerView_AutoScrollLogs_Tooltip {
            get {
                return ResourceManager.GetString("TaskManagerView_AutoScrollLogs_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue on Error.
        /// </summary>
        internal static string TaskManagerView_ContinueOnError {
            get {
                return ResourceManager.GetString("TaskManagerView_ContinueOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If active, SLM will move to the next task in the list in case of an error with the active task..
        /// </summary>
        internal static string TaskManagerView_ContinueOnError_Tooltip {
            get {
                return ResourceManager.GetString("TaskManagerView_ContinueOnError_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Steam Restart Dialog.
        /// </summary>
        internal static string TaskManagerView_SkipSteamRestartDialog {
            get {
                return ResourceManager.GetString("TaskManagerView_SkipSteamRestartDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If active, SLM will not ask to restart Steam on Steam library related tasks..
        /// </summary>
        internal static string TaskManagerView_SkipSteamRestartDialog_Tooltip {
            get {
                return ResourceManager.GetString("TaskManagerView_SkipSteamRestartDialog_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to However running Steam apps/games without restarting Steam may (and will) damage app/game installations and will require manual processing!.
        /// </summary>
        internal static string TaskManagerView_SkipSteamRestartDialog_Tooltip2 {
            get {
                return ResourceManager.GetString("TaskManagerView_SkipSteamRestartDialog_Tooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double-clicking on a task will open it&apos;s location in file explorer..
        /// </summary>
        internal static string TaskPanel_Tooltip {
            get {
                return ResourceManager.GetString("TaskPanel_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string TaskStatus_Completed {
            get {
                return ResourceManager.GetString("TaskStatus_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressing: {CurrentFileName} ({FileSize}).
        /// </summary>
        internal static string TaskStatus_CompressingFile {
            get {
                return ResourceManager.GetString("TaskStatus_CompressingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying file: {Percentage}%.
        /// </summary>
        internal static string TaskStatus_CopyingFile {
            get {
                return ResourceManager.GetString("TaskStatus_CopyingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompressing: {NewFileName} ({NewFileSize}).
        /// </summary>
        internal static string TaskStatus_Decompress {
            get {
                return ResourceManager.GetString("TaskStatus_Decompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting directory: {DirectoryName}.
        /// </summary>
        internal static string TaskStatus_DeletingDirectory {
            get {
                return ResourceManager.GetString("TaskStatus_DeletingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting: {FileName} ({FormattedFileSize}).
        /// </summary>
        internal static string TaskStatus_DeletingFile {
            get {
                return ResourceManager.GetString("TaskStatus_DeletingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme Accent.
        /// </summary>
        internal static string ThemeAccent {
            get {
                return ResourceManager.GetString("ThemeAccent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred Theme Accent to use with SLM..
        /// </summary>
        internal static string ThemeAccent_Tooltip {
            get {
                return ResourceManager.GetString("ThemeAccent_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme Base.
        /// </summary>
        internal static string ThemeBase {
            get {
                return ResourceManager.GetString("ThemeBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred Base Theme Colors to use with SLM..
        /// </summary>
        internal static string ThemeBase_Tooltip {
            get {
                return ResourceManager.GetString("ThemeBase_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Library Manager.
        /// </summary>
        internal static string TM_TaskActiveError {
            get {
                return ResourceManager.GetString("TM_TaskActiveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{AppName}] You can&apos;t remove an app from Task Manager which is currently being moved.
        ///
        ///Please Stop the Task Manager first..
        /// </summary>
        internal static string TM_TaskActiveErrorMessage {
            get {
                return ResourceManager.GetString("TM_TaskActiveErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translate SLM.
        /// </summary>
        internal static string TranslateSLM {
            get {
                return ResourceManager.GetString("TranslateSLM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Crowdin project page of SLM which you can contribute to translation of SLM..
        /// </summary>
        internal static string TranslateSLMDescription {
            get {
                return ResourceManager.GetString("TranslateSLMDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnauthorizedAccessException.
        /// </summary>
        internal static string UnauthorizedAccessException {
            get {
                return ResourceManager.GetString("UnauthorizedAccessException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{FullPath}] An error related to folder permissions happened during generating library content. Running SLM as Administrator might help.
        ///
        ///Error: {ExceptionMessage}.
        /// </summary>
        internal static string UnauthorizedAccessExceptionMessage {
            get {
                return ResourceManager.GetString("UnauthorizedAccessExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using the latest version of SLM..
        /// </summary>
        internal static string Updater_LatestVersionMessage {
            get {
                return ResourceManager.GetString("Updater_LatestVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uplay.
        /// </summary>
        internal static string Uplay {
            get {
                return ResourceManager.GetString("Uplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        internal static string Uplay_Open {
            get {
                return ResourceManager.GetString("Uplay_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnauthorizedAccessException while trying to update the registry for the Uplay game installation: {AppName}
        ///
        ///SLM must be running as Administrator for this process.
        ///
        ///Alternatively; you can use the &apos;Locate Game&apos; function of Uplay.
        ///{ExceptionMessage}
        ///.
        /// </summary>
        internal static string Uplay_UnauthorizedAccessExceptionMessage {
            get {
                return ResourceManager.GetString("Uplay_UnauthorizedAccessExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UnauthorizedAccessException while Installing Uplay Game.
        /// </summary>
        internal static string Uplay_UnauthorizedAccessExceptionTitle {
            get {
                return ResourceManager.GetString("Uplay_UnauthorizedAccessExceptionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error happened while updating game list for Uplay library: {FullPath}
        ///    {ex}.
        /// </summary>
        internal static string Uplay_UpdateAppListError {
            get {
                return ResourceManager.GetString("Uplay_UpdateAppListError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uplay Library Support.
        /// </summary>
        internal static string UplayLibrarySupport {
            get {
                return ResourceManager.GetString("UplayLibrarySupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/Disables Uplay Library functionality for SLM.
        /// </summary>
        internal static string UplayLibrarySupport_Tooltip {
            get {
                return ResourceManager.GetString("UplayLibrarySupport_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Method for Game Panel.
        /// </summary>
        internal static string ViewMethodForGamePanel {
            get {
                return ResourceManager.GetString("ViewMethodForGamePanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lets you switch between Grid and List View for Game Panel.
        /// </summary>
        internal static string ViewMethodForGamePanelDesc {
            get {
                return ResourceManager.GetString("ViewMethodForGamePanelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation wizard will help you set basics of SLM for first time use. Please start with selecting a default language, theme base and accent..
        /// </summary>
        internal static string Welcome_Text {
            get {
                return ResourceManager.GetString("Welcome_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternatively, you can close this window to use SLM&apos;s default options..
        /// </summary>
        internal static string Welcome_Text2 {
            get {
                return ResourceManager.GetString("Welcome_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
